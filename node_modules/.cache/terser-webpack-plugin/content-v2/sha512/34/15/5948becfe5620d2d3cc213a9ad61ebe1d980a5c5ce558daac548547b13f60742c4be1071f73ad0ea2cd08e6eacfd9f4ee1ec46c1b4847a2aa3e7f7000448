{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[97],{756:function(s,n,a){\"use strict\";a.r(n);var e=a(2),t=Object(e.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":s.$parent.slotKey}},[a(\"h4\",{attrs:{id:\"redis持久化机制\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#redis持久化机制\"}},[s._v(\"#\")]),s._v(\" Redis持久化机制\")]),s._v(\" \"),a(\"h5\",{attrs:{id:\"_1、介绍\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1、介绍\"}},[s._v(\"#\")]),s._v(\" 1、介绍\")]),s._v(\" \"),a(\"p\",[s._v(\"Redis是一个支持持久化的内存数据库，通过持久化机制把内存中的数据同步到硬盘文件来保证数据持久化。当Redis重启后通过把硬盘文件重新加载到内存，就能达到恢复数据的目的。\")]),s._v(\" \"),a(\"p\",[s._v(\"实现：单独创建fork()一个子进程，将当前父进程的数据库数据复制到子进程的内存中，然后由子进程写入到临时文件中，持久化的过程结束了，再用这个临时文件替换上次的快照文件，然后子进程退出，内存释放。\")]),s._v(\" \"),a(\"h5\",{attrs:{id:\"_2、存储方式\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2、存储方式\"}},[s._v(\"#\")]),s._v(\" 2、存储方式\")]),s._v(\" \"),a(\"p\",[s._v(\"Redis的持久化存储提供两种方式：RDB是默认配置。AOF需要手动开启。\")]),s._v(\" \"),a(\"p\",[a(\"strong\",[s._v(\"RDB：\")]),s._v(\" 是Redis默认的持久化方式。按照一定的时间周期策略把内存的数据以快照的形式保存到硬盘的二进制文件。即Snapshot快照存储，对应产生的数据文件为dump.rdb，通过配置文件中的save参数来定义快照的周期。（ 快照可以是其所表示的数据的一个副本，也可以是数据的一个复制品。）\")]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"优点:\\n\"),a(\"ul\",[a(\"li\",[s._v(\"文件体积比较小\")]),s._v(\" \"),a(\"li\",[s._v(\"性能会比 aof 好\")]),s._v(\" \"),a(\"li\",[s._v(\"恢复比 aof 要更快\")])])]),s._v(\" \"),a(\"li\",[s._v(\"缺点：\\n\"),a(\"ul\",[a(\"li\",[s._v(\"Redis宕机丢失最后一次备份之后的数据\")]),s._v(\" \"),a(\"li\",[s._v(\"保存rdb时，子进程操作期间,，Redis服务会停止响应(一般是毫秒级)，但如果数据量大且cpu时间紧张，则停止响应的时间可能长达1秒\")])])])]),s._v(\" \"),a(\"p\",[a(\"strong\",[s._v(\"AOF：\")]),s._v(\" Redis会将每一个收到的写命令都通过Write函数追加到文件最后，类似于MySQL的binlog。当Redis重启是会通过重新执行文件中保存的写命令来在内存中重建整个数据库的内容。\")]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"优点：\\n\"),a(\"ul\",[a(\"li\",[s._v(\"redis宕机最多丢失1秒的数据\")]),s._v(\" \"),a(\"li\",[s._v(\"文件易读\")])])]),s._v(\" \"),a(\"li\",[s._v(\"缺点:\\n\"),a(\"ul\",[a(\"li\",[s._v(\"文件较大、速度比rdb慢\")])])])]),s._v(\" \"),a(\"p\",[a(\"strong\",[s._v(\"当两种方式同时开启时，数据恢复Redis会优先选择AOF恢复。\")])]),s._v(\" \"),a(\"h5\",{attrs:{id:\"_3、配置\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3、配置\"}},[s._v(\"#\")]),s._v(\" 3、配置\")]),s._v(\" \"),a(\"h5\",{attrs:{id:\"rdb配置\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#rdb配置\"}},[s._v(\"#\")]),s._v(\" RDB配置\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-shell line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 快照配置\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 900秒（15分钟）内至少1个key值改变（则进行数据库保存--持久化） \")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 300秒（5分钟）内至少10个key值改变（则进行数据库保存--持久化） \")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 60秒（1分钟）内至少10000个key值改变（则进行数据库保存--持久化）\")]),s._v(\"\\nsave \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"900\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),s._v(\"\\nsave \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"300\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"10\")]),s._v(\"\\nsave \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"60\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"10000\")]),s._v(\"\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#当RDB持久化出现错误后，是否依然进行继续进行工作，yes：不能进行工作，no：可以继续进行工作，可以通过info中的rdb_last_bgsave_status了解RDB持久化是否有错误\")]),s._v(\"\\nstop-writes-on-bgsave-error \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"yes\")]),s._v(\"\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#使用压缩rdb文件，rdb文件压缩使用LZF压缩算法，yes：压缩，但是需要一些cpu的消耗。no：不压缩，需要更多的磁盘空间\")]),s._v(\"\\nrdbcompression \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"yes\")]),s._v(\"\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#是否校验rdb文件。从rdb格式的第五个版本开始，在rdb文件的末尾会带上CRC64的校验和。这跟有利于文件的容错性，但是在保存rdb文件的时候，会有大概10%的性能损耗，所以如果你追求高性能，可以关闭该配置。\")]),s._v(\"\\nrdbchecksum \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"yes\")]),s._v(\"\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#rdb文件的名称\")]),s._v(\"\\ndbfilename dump.rdb\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#数据目录，数据库的写入会在这个目录。rdb、aof文件也会写在这个目录\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"dir\")]),s._v(\" /var/lib/redis\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"18\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"19\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"20\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"21\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"22\")]),a(\"br\")])]),a(\"h5\",{attrs:{id:\"aof配置\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#aof配置\"}},[s._v(\"#\")]),s._v(\" AOF配置\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-SHELL line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#是否开启aof\")]),s._v(\"\\nappendonly \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"yes\")]),s._v(\"\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#aof文件名, 保存目录由 dir 参数决定\")]),s._v(\"\\nappendfilename \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"appendonly.aof\"')]),s._v(\"\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#aof持久化策略的配置\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#no：不执行fsync，由操作系统保证数据同步到磁盘，速度最快。\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#always：每次写入都执行fsync，以保证数据同步到磁盘。（影响性能）\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#everysec：每秒执行一次fsync，可能会导致丢失这1s数据。（最多丢失1s数据，推荐）\")]),s._v(\"\\nappendfsync everysec\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 在aof重写或者写入rdb文件的时候，会执行大量IO，此时对于everysec和always的aof模式来说，执行fsync会造成阻塞过长时间，no-appendfsync-on-rewrite字段设置为默认设置为no。如果对延迟要求很高的应用，这个字段可以设置为yes，否则还是设置为no，这样对持久化特性来说这是更安全的选择。设置为yes表示rewrite期间对新写操作不fsync,暂时存在内存中,等rewrite完成后再写入，默认为no，建议yes。Linux的默认fsync策略是30秒。可能丢失30秒数据。\")]),s._v(\"\\nno-appendfsync-on-rewrite no\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#aof自动重写配置。当目前aof文件大小超过上一次重写的aof文件大小的百分之多少进行重写，即当aof文件增长到一定大小的时候Redis能够调用bgrewriteaof对日志文件进行重写。当前AOF文件大小是上次日志重写得到AOF文件大小的二倍（设置为100）时，自动启动新的日志重写过程。\")]),s._v(\"\\nauto-aof-rewrite-percentage \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"100\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#设置允许重写的最小aof文件大小，避免了达到约定百分比但尺寸仍然很小的情况还要重写\")]),s._v(\"\\nauto-aof-rewrite-min-size 64mb\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#aof文件可能在尾部是不完整的，当redis启动的时候，aof文件的数据被载入内存。重启可能发生在redis所在的主机操作系统宕机后，尤其在ext4文件系统没有加上data=ordered选项（redis宕机或者异常终止不会造成尾部不完整现象。）出现这种现象，可以选择让redis退出，或者导入尽可能多的数据。如果选择的是yes，当截断的aof文件被导入的时候，会自动发布一个log给客户端然后load。如果是no，用户必须手动redis-check-aof修复AOF文件才可以。\")]),s._v(\"\\naof-load-truncated \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"yes\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"18\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"19\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"20\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"21\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"22\")]),a(\"br\")])])])}),[],!1,null,null,null);n.default=t.exports}}]);","extractedComments":[]}