{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[95],{758:function(t,_,v){\"use strict\";v.r(_);var e=v(2),n=Object(e.a)({},(function(){var t=this,_=t.$createElement,v=t._self._c||_;return v(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[v(\"h4\",{attrs:{id:\"压缩列表\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#压缩列表\"}},[t._v(\"#\")]),t._v(\" 压缩列表\")]),t._v(\" \"),v(\"h6\",{attrs:{id:\"介绍\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#介绍\"}},[t._v(\"#\")]),t._v(\" 介绍\")]),t._v(\" \"),v(\"p\",[t._v(\"​\\t\\t压缩列表是Redis为了节约内存而开发的，由一系列特殊编码的\"),v(\"code\",[t._v(\"连续内存块\")]),t._v(\"组成的顺序型数据结构。一个压缩列表可以包含任意多个节点(entry)，每个节点可以保存一个字节数组或者一个整数值。\")]),t._v(\" \"),v(\"h6\",{attrs:{id:\"组成部分\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#组成部分\"}},[t._v(\"#\")]),t._v(\" 组成部分\")]),t._v(\" \"),v(\"p\",[v(\"img\",{attrs:{src:\"https://markdown-1301775995.cos.ap-nanjing.myqcloud.com/image-20210319103219004.png\",alt:\"image-20210319103219004\"}})]),t._v(\" \"),v(\"p\",[v(\"strong\",[t._v(\"字段含义：\")])]),t._v(\" \"),v(\"ul\",[v(\"li\",[t._v(\"zlbytes：长度4字节。记录整个压缩列表占用的内存字节数。\")]),t._v(\" \"),v(\"li\",[t._v(\"zltail:  长度4字节。记录压缩列表尾节点距离压缩列表起始地址的字节数。（通过这个偏移量，程序无须遍历整个压缩列表就可以确定尾节点的地址）\")]),t._v(\" \"),v(\"li\",[t._v(\"zllen:  长度2字节。记录压缩列表所包含的节点(entry)数量。值小于65535时，这个属性的值就是压缩列表包含的节点数量；值等于65535时，节点的真实数量需要遍历整个压缩列表才能得出。\")]),t._v(\" \"),v(\"li\",[t._v(\"entry:  压缩列表的节点，节点的长度由保存的内容决定。\")]),t._v(\" \"),v(\"li\",[t._v(\"zlend:  长度1字节，固定为255。用于标记压缩列表的末端。\")])]),t._v(\" \"),v(\"h6\",{attrs:{id:\"entry节点的构成\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#entry节点的构成\"}},[t._v(\"#\")]),t._v(\" Entry节点的构成\")]),t._v(\" \"),v(\"p\",[v(\"img\",{attrs:{src:\"https://markdown-1301775995.cos.ap-nanjing.myqcloud.com/image-20210319113136664.png\",alt:\"image-20210319113136664\"}})]),t._v(\" \"),v(\"ul\",[v(\"li\",[v(\"p\",[t._v(\"previous_entry_length：记录压缩列表中前一个节点的长度。属性的长度可以是1字节或者5字节。\")]),t._v(\" \"),v(\"ul\",[v(\"li\",[t._v(\"如果前一个节点的长度小于254字节，则previous_entry_length的长度为1字节，前一个节点的长度就保存在这个字节里；\")]),t._v(\" \"),v(\"li\",[t._v(\"如果前一个节点的长度大于等于254字节，则previous_entry_length的长度为5字节，其中第一字节设置成0xFE（十进制的254），后面四个字节用于保存前一节点的长度。\")])])]),t._v(\" \"),v(\"li\",[v(\"p\",[t._v(\"encoding:  记录了节点的content属性所保存数据的类型以及长度。\")]),t._v(\" \"),v(\"ul\",[v(\"li\",[t._v(\"长度为1字节、2字节或5字节，值的最高位为00、01或10的是字节数组编码，即content保存的是字节数组，数组长度由编码除去最高两位之后的其他位记录。\")])]),t._v(\" \"),v(\"table\",[v(\"thead\",[v(\"tr\",[v(\"th\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"编码\")]),t._v(\" \"),v(\"th\",[t._v(\"编码长度\")]),t._v(\" \"),v(\"th\",[t._v(\"content属性保存的值\")])])]),t._v(\" \"),v(\"tbody\",[v(\"tr\",[v(\"td\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"00XXXXXX（如：00000001）\")]),t._v(\" \"),v(\"td\",[t._v(\"1字节\")]),t._v(\" \"),v(\"td\",[t._v(\"长度小于等于63字节的字节数组\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"01xxx...\")]),t._v(\" \"),v(\"td\",[t._v(\"2字节\")]),t._v(\" \"),v(\"td\",[t._v(\"长度小于等于16383字节的字节数组\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"10_ _ _ _ _ _  XXXX...\")]),t._v(\" \"),v(\"td\",[t._v(\"5字节\")]),t._v(\" \"),v(\"td\",[t._v(\"长度小于等于4699672954字节的字节数组\")])])])]),t._v(\" \"),v(\"p\",[t._v(\"(疑问：长度为5字节时，这里高位的后6位留空不记录长度)\")]),t._v(\" \"),v(\"ul\",[v(\"li\",[t._v(\"长度为1字节，值的最高位以11开头的是整数编码，即content保存的是整数值，整数值的类型和长度由编码除去最高两位之后的其他记录。\")])]),t._v(\" \"),v(\"table\",[v(\"thead\",[v(\"tr\",[v(\"th\",[t._v(\"编码\")]),t._v(\" \"),v(\"th\",[t._v(\"编码长度\")]),t._v(\" \"),v(\"th\",[t._v(\"Content属性保存的值\")])])]),t._v(\" \"),v(\"tbody\",[v(\"tr\",[v(\"td\",[t._v(\"11000000\")]),t._v(\" \"),v(\"td\",[t._v(\"1字节\")]),t._v(\" \"),v(\"td\",[t._v(\"int16_t类型的值（2字节）\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"11010000\")]),t._v(\" \"),v(\"td\",[t._v(\"1字节\")]),t._v(\" \"),v(\"td\",[t._v(\"int32_t类型的值（4字节）\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"11100000\")]),t._v(\" \"),v(\"td\",[t._v(\"1字节\")]),t._v(\" \"),v(\"td\",[t._v(\"int64_t类型的值（8字节）\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"11110000\")]),t._v(\" \"),v(\"td\",[t._v(\"1字节\")]),t._v(\" \"),v(\"td\",[t._v(\"24位有符号整数（3字节）\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"11111110\")]),t._v(\" \"),v(\"td\",[t._v(\"1字节\")]),t._v(\" \"),v(\"td\",[t._v(\"8位有符号整数（1字节）\")])]),t._v(\" \"),v(\"tr\",[v(\"td\",[t._v(\"1111XXXX\")]),t._v(\" \"),v(\"td\",[t._v(\"1字节\")]),t._v(\" \"),v(\"td\",[t._v(\"没有相应的content属性\")])])])])]),t._v(\" \"),v(\"li\",[v(\"p\",[t._v(\"content：  一个字节数组或者整数，值的类型和长度由节点的encoding属性决定。\")])])]),t._v(\" \"),v(\"p\",[t._v(\"例：\")]),t._v(\" \"),v(\"p\",[v(\"img\",{attrs:{src:\"https://markdown-1301775995.cos.ap-nanjing.myqcloud.com/image-20210319120600726.png\",alt:\"image-20210319120600726\"}})]),t._v(\" \"),v(\"p\",[t._v(\"​\\t\\t压缩列表的节点可以根据previous_entry_length定位到上一个节点的地址，而zltail可以快速定位表尾的地址，因此我们可以从表尾向表头遍历整个列表。\")]),t._v(\" \"),v(\"h6\",{attrs:{id:\"连锁更新\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#连锁更新\"}},[t._v(\"#\")]),t._v(\" 连锁更新\")]),t._v(\" \"),v(\"p\",[v(\"img\",{attrs:{src:\"https://markdown-1301775995.cos.ap-nanjing.myqcloud.com/image-20210319122134143.png\",alt:\"image-20210319122134143\"}})]),t._v(\" \"),v(\"p\",[t._v(\"​\\t\\t\"),v(\"strong\",[t._v(\"假设e1至eN都是大小介于250~253字节的节点\")]),t._v(\" ，BIG节点的长度大于等于254字节（需要5字节的previous_entry_length在保存），small节点的长度小于254字节（只需1字节来保存）。\")]),t._v(\" \"),v(\"p\",[t._v(\"​\\t\\t\"),v(\"strong\",[t._v(\"假设我们需要在e1的前面添加新节点\")]),t._v(\" ，e1原本的长度介于250~253字节，添加新节点之后e1的previous_entry_length属性仅长1字节，需执行空间重分配操作，由1字节扩展为5字节。而e1的长度就变成了254~257字节之间，导致e2也需进行空间重分配，e3,e4,...,eN也一样。Redis在这种特殊情况下产生的连续多次扩展操作称之为“连锁更新”。\")])])}),[],!1,null,null,null);_.default=n.exports}}]);","extractedComments":[]}