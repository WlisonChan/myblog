{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[106],{764:function(e,r,a){\"use strict\";a.r(r);var t=a(2),s=Object(t.a)({},(function(){var e=this,r=e.$createElement,a=e._self._c||r;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":e.$parent.slotKey}},[a(\"h2\",{attrs:{id:\"resource\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#resource\"}},[e._v(\"#\")]),e._v(\" @Resource\")]),e._v(\" \"),a(\"h3\",{attrs:{id:\"概念\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#概念\"}},[e._v(\"#\")]),e._v(\" 概念\")]),e._v(\" \"),a(\"p\",[a(\"code\",[e._v(\"@Resource\")]),e._v(\"注解与\"),a(\"code\",[e._v(\"@Autowired\")]),e._v(\"类似，也是用来进行依赖注入的，\"),a(\"code\",[e._v(\"@Resource\")]),e._v(\"是Java层面所提供的注解，@Autowired是Spring所提供的注解，它们依赖注入的底层实现逻辑也不同。\")]),e._v(\" \"),a(\"h3\",{attrs:{id:\"作用\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#作用\"}},[e._v(\"#\")]),e._v(\" 作用\")]),e._v(\" \"),a(\"p\",[a(\"code\",[e._v(\"@Resource\")]),e._v(\"注解中有一个name属性，针对name属性是否有值，\"),a(\"code\",[e._v(\"@Resource\")]),e._v(\"的依赖注入底层流程是不同的。\")]),e._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[e._v(\"1、\"),a(\"code\",[e._v(\"@Resource\")]),e._v(\"如果name属性有值，那么Spring会直接根据所指定的name值去Spring容器找Bean对象，如果找到了则返回，否则报错。\")])]),e._v(\" \"),a(\"li\",[a(\"p\",[e._v(\"2、如果\"),a(\"code\",[e._v(\"@Resource\")]),e._v(\"中的name属性没有值，\")]),e._v(\" \"),a(\"ul\",[a(\"li\",[e._v(\"1）判断属性名字在Spring容器中是否存在Bean对象\")]),e._v(\" \"),a(\"li\",[e._v(\"2）如果存在则将Bean对象注入\")]),e._v(\" \"),a(\"li\",[e._v(\"3）如果不存在则根据属性类型去Spring容器找Bean对象，找到一个则进行注入\")])])])])])}),[],!1,null,null,null);r.default=s.exports}}]);","extractedComments":[]}