{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{712:function(t,a,e){\"use strict\";e.r(a);var s=e(2),i=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[e(\"h4\",{attrs:{id:\"git基本理论\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#git基本理论\"}},[t._v(\"#\")]),t._v(\" Git基本理论\")]),t._v(\" \"),e(\"h5\",{attrs:{id:\"_1、工作区域\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1、工作区域\"}},[t._v(\"#\")]),t._v(\" 1、工作区域\")]),t._v(\" \"),e(\"blockquote\",[e(\"p\",[t._v(\"Git本地有三个工作区域：工作目录（Working Directory）、暂存区(Stage/Index)、资源库(Local Repository)。如果在加上远程的git仓库(Remote Directory)就可以分为四个工作区域。\")])]),t._v(\" \"),e(\"img\",{staticStyle:{zoom:\"50%\"},attrs:{src:\"https://markdown-1301775995.cos.ap-nanjing.myqcloud.com/image-20210307235328305.png\",alt:\"image-20210307235328305\"}}),t._v(\" \"),e(\"ul\",[e(\"li\",[t._v(\"Workspace：工作区，平时存放项目代码的地方\")]),t._v(\" \"),e(\"li\",[t._v(\"Index / Stage：暂存区，用于临时存放你的改动，事实上它只是一个文件，保存即将提交到文件列表信息\")]),t._v(\" \"),e(\"li\",[t._v(\"Repository：仓库区（或本地仓库），就是安全存放数据的位置，这里面有你提交到所有版本的数据。其中HEAD指向最新放入仓库的版本\")]),t._v(\" \"),e(\"li\",[t._v(\"Remote：远程仓库，托管代码的服务器，可以简单的认为是你项目组中的一台电脑用于远程数据交换\")])]),t._v(\" \"),e(\"h5\",{attrs:{id:\"_2、工作流程\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2、工作流程\"}},[t._v(\"#\")]),t._v(\" 2、工作流程\")]),t._v(\" \"),e(\"p\",[t._v(\"git的工作流程一般是这样的：\")]),t._v(\" \"),e(\"p\",[t._v(\"１、在工作目录中添加、修改文件；\")]),t._v(\" \"),e(\"p\",[t._v(\"２、将需要进行版本管理的文件放入暂存区域；\")]),t._v(\" \"),e(\"p\",[t._v(\"３、将暂存区域的文件提交到git仓库。\")]),t._v(\" \"),e(\"p\",[t._v(\"因此，git管理的文件有三种状态：已修改（modified）,已暂存（staged）,已提交(committed)\")]),t._v(\" \"),e(\"p\",[t._v(\"版本控制就是对文件的版本控制，要对文件进行修改、提交等操作，首先要知道文件当前在什么状态，不然可能会提交了现在还不想提交的文件，或者要提交的文件没提交上。\")]),t._v(\" \"),e(\"ul\",[e(\"li\",[t._v(\"Untracked: 未跟踪, 此文件在文件夹中, 但并没有加入到git库, 不参与版本控制. 通过git add 状态变为Staged.\")]),t._v(\" \"),e(\"li\",[t._v(\"Unmodify: 文件已经入库, 未修改, 即版本库中的文件快照内容与文件夹中完全一致. 这种类型的文件有两种去处, 如果它被修改, 而变为Modified. 如果使用git rm移出版本库, 则成为Untracked文件\")]),t._v(\" \"),e(\"li\",[t._v(\"Modified: 文件已修改, 仅仅是修改, 并没有进行其他的操作. 这个文件也有两个去处, 通过git add可进入暂存staged状态, 使用git checkout 则丢弃修改过, 返回到unmodify状态, 这个git checkout即从库中取出文件, 覆盖当前修改 !\")]),t._v(\" \"),e(\"li\",[t._v(\"Staged: 暂存状态. 执行git commit则将修改同步到库中, 这时库中的文件和本地文件又变为一致, 文件为Unmodify状态. 执行git reset HEAD filename取消暂存, 文件状态为Modified\")])]),t._v(\" \"),e(\"div\",{staticClass:\"language-shell line-numbers-mode\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"# 查看所有文件的状态\")]),t._v(\"\\nGit status\\n\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"# 查看指定文件的状态\")]),t._v(\"\\nGit status \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"filename\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\"\\n\")])]),t._v(\" \"),e(\"div\",{staticClass:\"line-numbers-wrapper\"},[e(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"5\")]),e(\"br\")])])])}),[],!1,null,null,null);a.default=i.exports}}]);","extractedComments":[]}