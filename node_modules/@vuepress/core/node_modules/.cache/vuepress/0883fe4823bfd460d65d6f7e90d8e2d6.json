{"remainingRequest":"/Users/williamchen/Downloads/myblog-master/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/williamchen/Downloads/myblog-master/node_modules/vuepress-plugin-cursor-effects/bin/assets/js/boom.js","dependencies":[{"path":"/Users/williamchen/Downloads/myblog-master/node_modules/vuepress-plugin-cursor-effects/bin/assets/js/boom.js","mtime":1618389125405},{"path":"/Users/williamchen/Downloads/myblog-master/node_modules/cache-loader/dist/cjs.js","mtime":1617735068429},{"path":"/Users/williamchen/Downloads/myblog-master/node_modules/babel-loader/lib/index.js","mtime":1617735068396}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}