(window.webpackJsonp=window.webpackJsonp||[]).push([[100],{759:function(t,n,e){"use strict";e.r(n);var s=e(2),l=Object(s.a)({},(function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"缓存击穿"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#缓存击穿"}},[t._v("#")]),t._v(" 缓存击穿")]),t._v(" "),e("p",[e("strong",[t._v("场景")])]),t._v(" "),e("ul",[e("li",[t._v("一份热点数据，它的访问量非常大。在其缓存失效瞬间，大量请求直达存储层，导致服务崩溃。")])]),t._v(" "),e("p",[e("strong",[t._v("解决方案")])]),t._v(" "),e("ul",[e("li",[e("p",[t._v("1、加互斥锁\n对数据的访问加互斥锁，当一个线程访问该数据时，其他线程只能等待。\n这个线程访问过后，缓存中的数据将被重建，届时其他线程就可以直接从缓存取值。")])]),t._v(" "),e("li",[e("p",[t._v("2、永不过期\n不设置过期时间，所以不会出现上述问题，这是“物理”上的不过期。\n为每个value设置逻辑过期时间，当发现该值逻辑过期时，使用单独的线程重建缓存。")])])])])}),[],!1,null,null,null);n.default=l.exports}}]);