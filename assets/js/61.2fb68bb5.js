(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{725:function(s,a,t){"use strict";t.r(a);var l=t(2),r=Object(l.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h4",{attrs:{id:"双亲委派机制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#双亲委派机制"}},[s._v("#")]),s._v(" 双亲委派机制")]),s._v(" "),t("p",[s._v("JVM中提供了三层的ClassLoader：")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("Bootstrap classLoader:")]),s._v(" 主要负责加载核心的类库(java.lang.*等)，构造ExtClassLoader和APPClassLoader。")]),s._v(" "),t("li",[t("strong",[s._v("ExtClassLoader：")]),s._v(" 主要负责加载jre/lib/ext目录下的一些扩展的jar。")]),s._v(" "),t("li",[t("strong",[s._v("AppClassLoader：")]),s._v(" 主要负责加载应用程序的主函数类。")])]),s._v(" "),t("p",[t("strong",[s._v("作用：")])]),s._v(" "),t("p",[s._v("1、防止重复加载同一个.class。通过委托去向上面问一问，加载过了，就不用再加载一遍。保证数据安全。\n2、保证核心.class不能被篡改。通过委托方式，不会去篡改核心.class，即使篡改也不会去加载，即使加载也不会是同一个.class对象了。不同的加载器加载同一个.class也不是同一个Class对象。这样保证了Class执行安全。")]),s._v(" "),t("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://markdown-1301775995.cos.ap-nanjing.myqcloud.com/F3DB1A9BCB8EBD9589429C7A8482C963.jpg",alt:"F3DB1A9BCB8EBD9589429C7A8482C963"}})])}),[],!1,null,null,null);a.default=r.exports}}]);