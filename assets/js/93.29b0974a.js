(window.webpackJsonp=window.webpackJsonp||[]).push([[93],{752:function(t,s,a){"use strict";a.r(s);var e=a(2),v=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h4",{attrs:{id:"简单动态字符串-simple-dynamic-string"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简单动态字符串-simple-dynamic-string"}},[t._v("#")]),t._v(" 简单动态字符串（Simple Dynamic String）")]),t._v(" "),a("p",[a("strong",[t._v("使用地方：redis的key、字符串。")])]),t._v(" "),a("div",{staticClass:"language-c++ line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\tstruct sdshdr{\n        //记录buf数组中已使用字节的数量\n        //等于SDS所保存字符串的长度\n        int len;\n        //记录buf数组中未使用字节的数量\n        int free;\n        //字节数组，用于保存字符串\n        char buf[];\n    }\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://markdown-1301775995.cos.ap-nanjing.myqcloud.com/image-20210319003644973.png",alt:"image-20210319003644973"}}),t._v(" "),a("ul",[a("li",[t._v("free属性的值为3，表示这个SDS未使用的空间为3字节。")]),t._v(" "),a("li",[t._v("len属性的值为4，表示这个SDS保存了一个4字节长的字符串。")]),t._v(" "),a("li",[t._v("buf属性是一个char类型的数组，数组的前4个字节分别保存了4个字符，而最后一个字符则保存了空字符'\\0'。")])]),t._v(" "),a("p",[t._v("与C字符串相比（后面详细介绍）：")]),t._v(" "),a("ul",[a("li",[a("ul",[a("li",[t._v("获取一个SDS长度的复杂度仅为O（1）.")])])]),t._v(" "),a("li",[t._v("杜绝了缓冲区溢出。（C++使用strcat()函数前未分配足够内存会溢出）")]),t._v(" "),a("li",[t._v("二进制安全。（使用len属性的值而不是空字符来判断字符串是否结束）。")]),t._v(" "),a("li",[t._v("修改字符串长度N次最多需要执行N次内存重分配（把长度缩短后只修改len和free即可）")]),t._v(" "),a("li",[t._v("兼容部分C字符串函数。")])]),t._v(" "),a("h5",{attrs:{id:"杜绝缓冲区溢出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#杜绝缓冲区溢出"}},[t._v("#")]),t._v(" 杜绝缓冲区溢出")]),t._v(" "),a("p",[t._v('​\t\t假设一种场景：内存中紧邻着两个C字符串S1和S2，当执行strcat(S1,"william")时，由于S1分配的空间不够，S1的数据将溢出到S2所在的空间，导致S2保存的内容被意外的修改。')]),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://markdown-1301775995.cos.ap-nanjing.myqcloud.com/image-20210319011833554.png",alt:"image-20210319011833554"}}),t._v(" "),a("p",[t._v("​\t\tSDS的空间分配策略完全杜绝了发生缓冲区溢出的可能。当SDS API需要对SDS进行修改时，API会先检查SDS的空间是否满足修改所需的要求，如果不满足，API会自动将SDS的空间扩展至执行修改所需的大小(具体可看下面的空间预分配)，然后才执行实际的修改操作，所以使用SDS既不需要手动修改SDS的空间大小，也不会出现缓冲区溢出问题。")]),t._v(" "),a("h5",{attrs:{id:"空间预分配"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#空间预分配"}},[t._v("#")]),t._v(" 空间预分配")]),t._v(" "),a("p",[t._v("条件：当对SDS进行修改并且需要进行空间扩展时。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("1、SDS的长度（"),a("code",[t._v("len")]),t._v("属性）小于"),a("code",[t._v("1MB")]),t._v("，那么程序分配和len属性同样大小的未使用空间，即"),a("code",[t._v("len")]),t._v("属性的值和"),a("code",[t._v("free")]),t._v("属性的值相同。")]),t._v(" "),a("ul",[a("li",[t._v("例：对SDS修改后，SDS的len变成13字节，那么程序也会分配13字节的未使用空间。")])])]),t._v(" "),a("li",[a("p",[t._v("2、SDS的长度大于等于"),a("code",[t._v("1MB")]),t._v("，程序会分配"),a("code",[t._v("1MB")]),t._v("的未使用空间。")]),t._v(" "),a("ul",[a("li",[t._v("例：对SDS修改后，SDS的len变成"),a("code",[t._v("30MB")]),t._v("，那么程序会分配"),a("code",[t._v("1MB")]),t._v("的未使用空间，SDS的"),a("code",[t._v("buf")]),t._v("数组实际长度将为"),a("code",[t._v("30MB+1MB+1byte")]),t._v("。（1byte为空字符）")])])])]),t._v(" "),a("p",[t._v("通过空间预分配策略，Redis可以减少连续执行字符串增长操作所需的"),a("code",[t._v("内存重分配")]),t._v("次数。")]),t._v(" "),a("h5",{attrs:{id:"惰性空间释放"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#惰性空间释放"}},[t._v("#")]),t._v(" 惰性空间释放")]),t._v(" "),a("p",[t._v("惰性空间释放用于优化SDS的字符串缩短操作。")]),t._v(" "),a("p",[t._v("​\t\t当SDS的API需要缩短SDS保存的字符串时，程序并不立即使用内存重分配来回收缩短后多出来的字节，而是使用free属性将这些字节的数量纪录起来，并等待将来使用。")]),t._v(" "),a("p",[t._v("​\t\tSDS提供了相应的API，让我们可以在有需要时，真正地释放SDS的未使用空间，所以不需担心惰性空间释放策略会造成的内存浪费。")]),t._v(" "),a("h5",{attrs:{id:"二进制安全"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二进制安全"}},[t._v("#")]),t._v(" 二进制安全")]),t._v(" "),a("p",[t._v("​\t\t所有SDS API都会以处理二进制的方式来处理SDS存放在buf数组里的数据，程序不会对其中的数据做任何限制、过滤、或者假设，数据在写入时是什么样的，它被读取时就是什么样。")]),t._v(" "),a("p",[t._v("​\t\t对于保存特殊数据格式也是没有任何问题的，因为SDS使用len属性的值而不是空字符来判断字符串是否结束。")])])}),[],!1,null,null,null);s.default=v.exports}}]);