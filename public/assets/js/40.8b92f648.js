(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{700:function(s,t,e){"use strict";e.r(t);var a=e(2),n=Object(a.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h3",{attrs:{id:"docker-镜像原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker-镜像原理"}},[s._v("#")]),s._v(" Docker 镜像原理")]),s._v(" "),e("hr"),s._v(" "),e("h4",{attrs:{id:"镜像是什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#镜像是什么"}},[s._v("#")]),s._v(" 镜像是什么")]),s._v(" "),e("p",[s._v("镜像是一种轻量级、可执行的独立软件包，用来打包软件运行环境和基于运行环境开发的软件，它包含运行某个软件所需的所有内容，包括代码、运行时、库、环境变量和配置文件。")]),s._v(" "),e("p",[s._v("所有的应用，直接打包docker镜像，就可以直接跑起来！")]),s._v(" "),e("p",[s._v("得到镜像的方式：")]),s._v(" "),e("ul",[e("li",[s._v("从远程仓库下载")]),s._v(" "),e("li",[s._v("同事拷贝给你")]),s._v(" "),e("li",[s._v("自己制作一个镜像DockerFile")])]),s._v(" "),e("h3",{attrs:{id:"docker镜像加载原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker镜像加载原理"}},[s._v("#")]),s._v(" Docker镜像加载原理")]),s._v(" "),e("blockquote",[e("p",[s._v("UnionFS(联合文件系统)")])]),s._v(" "),e("ul",[e("li",[e("p",[s._v("是一种"),e("strong",[s._v("分层、轻量级并且高性能的文件系统")]),s._v("，它支持对文件系统的修改，"),e("strong",[s._v("作为一次提交来一层层的叠加")]),s._v("，同时可以将不同目录挂载到同一个虚拟文件系统下（unite directories into a single virtual filesystem）。")])]),s._v(" "),e("li",[e("p",[s._v("UnionFS是Docker镜像的基础，"),e("strong",[s._v("镜像可以通过分层来继承，基于基础镜像（没有父镜像的镜像），可以制作各种具体的应用镜像")])]),s._v(" "),e("p",[s._v("特性："),e("strong",[s._v("一次同时加载多个文件系统")]),s._v("，但从外面看起来只能看到一个文件系统，联合加载会把各层文件系统叠加起来，这样最终的文件系统会包含所有底层的文件和目录")])]),s._v(" "),e("li",[e("p",[s._v("例子：比如说 mysql 和 tomcat 都需要 centos 环境，先安装了 mysql ，就有了 centos 的环境，那再安装 tomcat ，就可以共用这一层 centos ，不需要再下载 centos 。")])])]),s._v(" "),e("h4",{attrs:{id:"分层镜像例子"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分层镜像例子"}},[s._v("#")]),s._v(" 分层镜像例子：")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 先下载nginx ")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@VM_0_10_centos ~"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker pull nginx")]),s._v("\nUsing default tag: latest\nlatest: Pulling from library/nginx\nbb79b6b2107f: Pull complete \n111447d5894d: Pull complete \na95689b8e6cb: Pull complete \n1a0022e444c2: Pull complete \n32b7488a3833: Pull complete \nDigest: sha256:ed7f815851b5299f616220a63edac69a4cc200e7f536a56e421988da82e44ed8\nStatus: Downloaded newer image "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" nginx:latest\ndocker.io/library/nginx:latest\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 然后拉取redis的镜像 ")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@VM_0_10_centos ~"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker pull redis")]),s._v("\nUsing default tag: latest\nlatest: Pulling from library/redis\nbb79b6b2107f: Already exists \t\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 这一层镜像在拉取nginx的时候下载过，不需要再次下载")]),s._v("\n1ed3521a5dcb: Pull complete \n5999b99cee8f: Pull complete \ndd17877d8f2d: Pull complete \n4863b56b12a8: Pull complete \n069e700bc397: Pull complete \nDigest: sha256:a0494b60a0bc6de161d26dc2d2f9d2f1c5435e86a9e5d48862a161131affa6bd\nStatus: Downloaded newer image "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" redis:latest\ndocker.io/library/redis:latest\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br")])]),e("p",[s._v("优点："),e("strong",[s._v("资源共享")]),s._v("。多个镜像都从相同的 base 镜像构建而来，那么宿主机只需要在磁盘上保留一份 base 镜像，同时内存中也只需要加载一份 base 镜像，这样就可以为所有的容器服务了，而且镜像的每一层都可以被共享。")]),s._v(" "),e("h3",{attrs:{id:"docker-镜像加载原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker-镜像加载原理"}},[s._v("#")]),s._v(" "),e("strong",[s._v("Docker 镜像加载原理")])]),s._v(" "),e("ul",[e("li",[s._v("Docker的镜像实际上"),e("strong",[s._v("由一层一层的文件系统组成")]),s._v("，这种层级的文件系统UnionFS。")]),s._v(" "),e("li",[s._v("**BootFS（Boot file system）**主要包含 bootloader 和 kernel，bootloader 主要是引导加载 kernel，Linux 刚启动时会加载 BootFS文件系统，在 Docker 镜像的最底层是 BootFS。这一层与我们典型的 Linux/Unix 系统是一样的，包含 boot 加载器 和 内核。当 boot 加载完成之后整个内核就都在内存中了，此时内存的使用权已由 BootFS 转交给内核，此时系统也会卸载 BootFS。")]),s._v(" "),e("li",[e("strong",[s._v("RootFS（Root File System）")]),s._v("，在 BootFS 之上，包含的就是典型 Linux 系统中的 /dev，/proc，/bin，/etc 等标准目录和文件。RootFS就是各种不同的操作系统发行版，比如 Ubuntu CentOS 等等。")])]),s._v(" "),e("p",[e("img",{attrs:{src:"https://markdown-1301775995.cos.ap-nanjing.myqcloud.com/docker%E9%95%9C%E5%83%8F%E5%8E%9F%E7%90%86.png",alt:""}})])])}),[],!1,null,null,null);t.default=n.exports}}]);