(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{714:function(s,i,n){"use strict";n.r(i);var e=n(2),o=Object(e.a)({},(function(){var s=this,i=s.$createElement,n=s._self._c||i;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"分布式session"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#分布式session"}},[s._v("#")]),s._v(" 分布式Session")]),s._v(" "),n("p",[s._v("Session的概念和介绍详情请看同一页面下的Cookie和Session文章。")]),s._v(" "),n("h3",{attrs:{id:"分布式session解决方案-简述"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#分布式session解决方案-简述"}},[s._v("#")]),s._v(" 分布式Session解决方案（简述）")]),s._v(" "),n("ul",[n("li",[n("p",[n("strong",[s._v("Session复制：")]),s._v(" 后台多台服务器之间相互同步复制。")])]),s._v(" "),n("li",[n("p",[n("strong",[s._v("前端存储：")]),s._v(" 使用客户端的浏览器Cookie存储Session信息。")])]),s._v(" "),n("li",[n("p",[n("strong",[s._v("粘性Session方案：")]),s._v(" 基于Nginx的ip-Hash策略，对客户端和服务端进行绑定，同一客户端的每次请求都是同一服务器。")])]),s._v(" "),n("li",[n("p",[n("strong",[s._v("基于Redis的后端存储：")]),s._v(" 利用Redis存储Session，所有服务器都从Redis中取出Session。服务器扩容或重启都无须关心Session。")])])]),s._v(" "),n("h3",{attrs:{id:"详细介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#详细介绍"}},[s._v("#")]),s._v(" 详细介绍")]),s._v(" "),n("blockquote",[n("p",[s._v("考虑到项目的后期使用，必须应对大流量、高并发等因素，单机部署不满足日常需求，我们一般会采用服务器分布式部署的技术。但随着服务器分布式的部署，需要考虑一些数据共享的问题，其中包括分布式Session问题。")])]),s._v(" "),n("p",[n("img",{attrs:{src:"https://markdown-1301775995.cos.ap-nanjing.myqcloud.com/image-20210322130613457.png",alt:"image-20210322130613457"}})]),s._v(" "),n("p",[n("strong",[s._v("问题定义：")]),s._v(" 客户端第一次登陆请求，Nginx将其请求分发到Server A中，此时Session 在Server A创建并存储。当客户端第二次发起请求时，Nginx如果将其请求分发到Server B中，而Server B并不存在此客户端的Session信息，此时会让客户端重新登录。")]),s._v(" "),n("p",[n("strong",[s._v("1、Session复制")])]),s._v(" "),n("p",[s._v("由于Session存在于其中一台Server中，我们可以将此Session复制传输到其他Server中。")]),s._v(" "),n("p",[n("strong",[s._v("缺点：")])]),s._v(" "),n("ul",[n("li",[s._v("服务器量大的情况下，需要同步的Session数据量呈正比增长，所需的网络开销也随之增长。")]),s._v(" "),n("li",[s._v("Session在每一台服务器都存在一份，所需的内存开销较大。")])]),s._v(" "),n("p",[n("img",{attrs:{src:"https://markdown-1301775995.cos.ap-nanjing.myqcloud.com/image-20210322131256798.png",alt:"image-20210322131256798"}})]),s._v(" "),n("p",[n("strong",[s._v("2、前端存储")])]),s._v(" "),n("p",[s._v("直接将Session的信息加密后存储在客户端的cookie上，每次请求都携带此信息。")]),s._v(" "),n("p",[n("strong",[s._v("缺点：")])]),s._v(" "),n("ul",[n("li",[s._v("将数据信息存储在客户端不安全，需要准备好加密方案。")]),s._v(" "),n("li",[s._v("受Cookie大小限制（4k），且增加网络开销。")])]),s._v(" "),n("p",[n("img",{attrs:{src:"https://markdown-1301775995.cos.ap-nanjing.myqcloud.com/image-20210322132248779.png",alt:"image-20210322132248779"}})]),s._v(" "),n("p",[n("strong",[s._v("3、粘性Session方案")])]),s._v(" "),n("p",[s._v("基于Nginx的负载均衡策略，采用ip-hash的方式对客户端的ip做hash，然后将请求分发到一台服务器上，可以确保同一ip下的所有请求都分发到同一台服务器上。")]),s._v(" "),n("p",[n("strong",[s._v("缺点：")])]),s._v(" "),n("ul",[n("li",[s._v("当出现单点故障时，故障服务器上的Session信息将全部丢失。")]),s._v(" "),n("li",[s._v("增加或减少服务器时，需重新计算Hash值，部分客户端由于没有对应的Session，需要重新创建Session。")])]),s._v(" "),n("p",[n("img",{attrs:{src:"https://markdown-1301775995.cos.ap-nanjing.myqcloud.com/image-20210322133241028.png",alt:"image-20210322133241028"}})]),s._v(" "),n("p",[n("strong",[s._v("4、基于Redis的后端存储（推荐）")])]),s._v(" "),n("p",[s._v("利用Redis存储Session，所有服务器都从Redis中取出Session。服务器扩容或重启都无须关心Session。")]),s._v(" "),n("p",[n("strong",[s._v("缺点：")])]),s._v(" "),n("ul",[n("li",[s._v("每次请求都需要去调用一次Redis，增加了网络开销。")])]),s._v(" "),n("p",[n("img",{attrs:{src:"https://markdown-1301775995.cos.ap-nanjing.myqcloud.com/image-20210322134248329.png",alt:"image-20210322134248329"}})])])}),[],!1,null,null,null);i.default=o.exports}}]);